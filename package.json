{
  "name": "greybel-vs",
  "displayName": "Greybel VS",
  "description": "Toolkit for GreyScript.",
  "publisher": "ayecue",
  "author": {
    "name": "ayecue",
    "email": "soerenwehmeier@googlemail.com"
  },
  "icon": "icon.png",
  "version": "2.8.1",
  "repository": {
    "type": "git",
    "url": "git@github.com:ayecue/greybel-vs.git"
  },
  "devDependencies": {
    "@monaco-editor/loader": "^1.3.2",
    "@types/color-convert": "^2.0.0",
    "@types/node": "^12.12.0",
    "@types/react": "^18.0.17",
    "@types/react-dom": "^18.0.6",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^5.27.1",
    "@typescript-eslint/parser": "^5.27.1",
    "@vscode/test-electron": "^2.0.3",
    "@vscode/test-web": "^0.0.56",
    "dotenv": "^16.4.5",
    "esbuild": "0.21.0",
    "esbuild-plugin-globals": "0.2.0",
    "esbuild-plugin-polyfill-node": "0.3.0",
    "eslint": "^8.17.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-security": "^1.5.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "ovsx": "^0.10.1",
    "source-map-support": "^0.5.12",
    "typescript": "^4.5.4",
    "vsce": "^2.15.0"
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "npm run compile:ts && npm run compile:node && npm run compile:browser && npm run compile:api && npm run move",
    "compile:ts": "tsc -p ./",
    "compile:node": "node build-node.cjs",
    "compile:browser": "node build-browser.cjs",
    "compile:extension": "vsce package --out extension.vsix",
    "compile:api": "node build-api.cjs",
    "move": "npm run move:api:stylesheet && npm run move:grammar",
    "move:api:stylesheet": "cp node_modules/greyscript-meta-web/web/index.css ./api.view.css",
    "move:grammar": "cp -r node_modules/greyscript-textmate/dist/*.json ./",
    "lint": "eslint ./src/**/*.ts",
    "lint:fix": "eslint --fix ./src/**/*.ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test:browser": "npm run compile:ts && npm run compile:browser && vscode-test-web --extensionDevelopmentPath=. ."
  },
  "homepage": "https://github.com/ayecue/greybel-vs",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Debuggers",
    "Programming Languages",
    "Formatters"
  ],
  "main": "extension.js",
  "browser": "extension.browser.js",
  "qna": "false",
  "bugs": {
    "url": "https://github.com/ayecue/greybel-vs/issues"
  },
  "activationEvents": [
    "onLanguage:greyscript"
  ],
  "contributes": {
    "menus": {
      "editor/title/run": [
        {
          "command": "greybel.debug.runFileFromContext",
          "when": "resourceLangId == greyscript && config.greybel.rootFile == ''",
          "group": "navigation@1"
        },
        {
          "command": "greybel.debug.debugFileFromContext",
          "when": "resourceLangId == greyscript && config.greybel.rootFile == ''",
          "group": "navigation@2"
        },
        {
          "command": "greybel.debug.runRootFile",
          "when": "resourceLangId == greyscript && config.greybel.rootFile != ''",
          "group": "navigation@1"
        },
        {
          "command": "greybel.debug.debugRootFile",
          "when": "resourceLangId == greyscript && config.greybel.rootFile != ''",
          "group": "navigation@2"
        }
      ],
      "editor/context": [
        {
          "command": "greybel.gotoError",
          "when": "resourceLangId == greyscript",
          "group": "navigation"
        },
        {
          "submenu": "greybel.transform",
          "when": "resourceLangId == greyscript",
          "group": "1_modification"
        },
        {
          "command": "greybel.buildFileFromContext",
          "when": "resourceLangId == greyscript",
          "group": "1_modification"
        },
        {
          "command": "greybel.debug.runFileFromContext",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.debug.debugFileFromContext",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.api",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.preview",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.share",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.import",
          "group": "1_modification"
        }
      ],
      "greybel.transform": [
        {
          "command": "greybel.transform.clipboard",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.transform.write",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.uglify.write",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.beautify.write",
          "when": "resourceLangId == greyscript"
        }
      ],
      "explorer/context": [
        {
          "command": "greybel.buildFileFromContext",
          "when": "resourceLangId == greyscript",
          "group": "1_modification"
        },
        {
          "command": "greybel.debug.runFileFromContext",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.debug.debugFileFromContext",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.share",
          "when": "resourceLangId == greyscript",
          "group": "z_commands"
        },
        {
          "command": "greybel.import",
          "group": "z_commands"
        }
      ],
      "commandPalette": [
        {
          "command": "greybel.debug.debugFileFromContext",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.debug.runFileFromContext",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.debug.debugRootFile",
          "when": "resourceLangId == greyscript && config.greybel.rootFile != ''"
        },
        {
          "command": "greybel.debug.runRootFile",
          "when": "resourceLangId == greyscript && config.greybel.rootFile != ''"
        },
        {
          "command": "greybel.transform.clipboard",
          "when": "false"
        },
        {
          "command": "greybel.transform.write",
          "when": "false"
        },
        {
          "command": "greybel.uglify.write",
          "when": "false"
        },
        {
          "command": "greybel.beautify.write",
          "when": "false"
        },
        {
          "command": "greybel.share",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.api",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.preview",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.buildRootFile",
          "when": "resourceLangId == greyscript && config.greybel.rootFile != ''"
        },
        {
          "command": "greybel.buildFileFromContext",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.import",
          "when": "resourceLangId == greyscript"
        },
        {
          "command": "greybel.gotoError",
          "when": "false"
        },
        {
          "command": "greybel.snippets",
          "when": "resourceLangId == greyscript"
        }
      ]
    },
    "submenus": [
      {
        "id": "greybel.transform",
        "label": "Greybel: Transform"
      }
    ],
    "languages": [
      {
        "id": "greyscript",
        "aliases": [
          "GreyScript",
          "greyscript"
        ],
        "extensions": [
          ".src",
          ".gs",
          ".ms"
        ],
        "icon": {
          "light": "./icons/file-icon-lightmode.png",
          "dark": "./icons/file-icon-darkmode.png"
        },
        "configuration": "./greyscriptLanguageConfig.json"
      }
    ],
    "grammars": [
      {
        "language": "greyscript",
        "scopeName": "source.src",
        "path": "./greyscript.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "greyscript",
        "path": "./snippets.json"
      }
    ],
    "commands": [
      {
        "command": "greybel.gotoError",
        "category": "Utility",
        "title": "Greybel: Goto Error"
      },
      {
        "command": "greybel.buildRootFile",
        "category": "Build",
        "title": "Greybel: Build root file"
      },
      {
        "command": "greybel.buildFileFromContext",
        "category": "Build",
        "title": "Greybel: Build file from context"
      },
      {
        "command": "greybel.transform.clipboard",
        "category": "Transform",
        "title": "Greybel: Transform to clipboard"
      },
      {
        "command": "greybel.transform.write",
        "category": "Transform",
        "title": "Greybel: Transform"
      },
      {
        "command": "greybel.uglify.write",
        "category": "Transform",
        "title": "Greybel: Uglify"
      },
      {
        "command": "greybel.beautify.write",
        "category": "Transform",
        "title": "Greybel: Beautify"
      },
      {
        "command": "greybel.share",
        "category": "Utility",
        "title": "Greybel: Share"
      },
      {
        "command": "greybel.api",
        "category": "Utility",
        "title": "Greybel: API Documentation"
      },
      {
        "command": "greybel.preview",
        "category": "Utility",
        "title": "Greybel: Preview output"
      },
      {
        "command": "greybel.import",
        "category": "Utility",
        "title": "Greybel: Import file into the game"
      },
      {
        "command": "greybel.snippets",
        "category": "Utility",
        "title": "Greybel: Snippets"
      },
      {
        "command": "greybel.debug.debugFileFromContext",
        "title": "Greybel: Debug file from context",
        "category": "Execution",
        "enablement": "!inDebugMode",
        "icon": "$(debug-alt)"
      },
      {
        "command": "greybel.debug.runFileFromContext",
        "title": "Greybel: Run file from context",
        "category": "Execution",
        "enablement": "!inDebugMode",
        "icon": "$(play)"
      },
      {
        "command": "greybel.debug.debugRootFile",
        "title": "Greybel: Debug root file",
        "category": "Execution",
        "enablement": "!inDebugMode",
        "icon": "$(debug-alt)"
      },
      {
        "command": "greybel.debug.runRootFile",
        "title": "Greybel: Run root file",
        "category": "Execution",
        "enablement": "!inDebugMode",
        "icon": "$(play)"
      }
    ],
    "configuration": [
      {
        "title": "General",
        "properties": {
          "greybel.formatter": {
            "type": "boolean",
            "default": true,
            "description": "Enable GreyScript formatter."
          },
          "greybel.autocomplete": {
            "type": "boolean",
            "default": true,
            "description": "Enable Greybel autocomplete."
          },
          "greybel.hoverdocs": {
            "type": "boolean",
            "default": true,
            "description": "Enable Greybel hover tooltips."
          },
          "greybel.diagnostic": {
            "type": "boolean",
            "default": true,
            "description": "Enable Greybel diagnostic."
          },
          "greybel.fileExtensions": {
            "type": "string",
            "default": "src,gs,ms",
            "description": "Define allowed file extension."
          },
          "greybel.rootFile": {
            "type": "string",
            "description": "Define the root project file. If not set, the extension will rely on the given context to built or execute files.",
            "scope": "resource"
          },
          "greybel.autoCompile": {
            "type": "boolean",
            "default": true,
            "description": "Enable auto compile."
          }
        }
      },
      {
        "title": "Type Analyzer",
        "properties": {
          "greybel.typeAnalyzer.exclude": {
            "type": "string",
            "default": "",
            "description": "Glob pattern to exclude files.",
            "scope": "resource"
          },
          "greybel.typeAnalyzer.strategy": {
            "type": "string",
            "enum": [
              "Dependency",
              "Workspace"
            ],
            "default": "Dependency",
            "description": "Strategy that determines which files are used for type resolver.",
            "scope": "resource"
          }
        }
      },
      {
        "title": "Interpreter",
        "properties": {
          "greybel.interpreter.environmentType": {
            "type": "string",
            "default": "Mock",
            "enum": [
              "Mock",
              "In-Game"
            ],
            "description": "Interpreter environment type."
          },
          "greybel.interpreter.programName": {
            "type": "string",
            "default": "myprogram",
            "description": "Program name which should be used in runtime. (Only in-game env)",
            "scope": "resource"
          },
          "greybel.interpreter.port": {
            "type": "number",
            "default": 7777,
            "description": "Message-hook port for interpreter. (Only in-game env)",
            "scope": "resource"
          },
          "greybel.interpreter.seed": {
            "type": "string",
            "default": "test",
            "description": "Interpreter seed. (Only mock env)"
          },
          "greybel.interpreter.environmentVariables": {
            "type": "object",
            "default": {},
            "description": "Environment variables.",
            "scope": "resource"
          },
          "greybel.interpreter.environmentFile": {
            "type": "string",
            "default": ".env",
            "description": "Environment variables file.",
            "scope": "resource"
          },
          "greybel.interpreter.hideUnsupportedTextMeshProRichTextTags": {
            "type": "boolean",
            "default": false,
            "description": "Hide unsupported TextMesh Pro rich text tags."
          },
          "greybel.interpreter.useDefaultArgs": {
            "type": "boolean",
            "default": false,
            "description": "Prevent argument prompt and instead use default args.",
            "scope": "resource"
          },
          "greybel.interpreter.silenceErrorPopups": {
            "type": "boolean",
            "default": false,
            "description": "Silence error popups."
          },
          "greybel.interpreter.defaultArgs": {
            "type": "string",
            "default": "",
            "description": "Default arguments used for script.",
            "scope": "resource"
          }
        }
      },
      {
        "title": "Transpiler",
        "properties": {
          "greybel.transpiler.buildType": {
            "type": "string",
            "enum": [
              "Default",
              "Uglify",
              "Beautify"
            ],
            "default": "Default",
            "description": "Build type.",
            "scope": "resource"
          },
          "greybel.transpiler.watch": {
            "type": "boolean",
            "default": false,
            "description": "Watch project files for changes and build root file automatically.",
            "scope": "resource"
          },
          "greybel.transpiler.outputFilename": {
            "type": "string",
            "description": "Specify the name of the main output file. Please note that if you do not add an extension auto compile will not work.",
            "scope": "resource"
          },
          "greybel.transpiler.environmentVariables": {
            "type": "object",
            "default": {},
            "description": "Environment variables.",
            "scope": "resource"
          },
          "greybel.transpiler.environmentFile": {
            "type": "string",
            "default": ".env",
            "description": "Environment variables file.",
            "scope": "resource"
          },
          "greybel.transpiler.dlo": {
            "type": "boolean",
            "default": false,
            "description": "Disable literals optimization."
          },
          "greybel.transpiler.dno": {
            "type": "boolean",
            "default": false,
            "description": "Disable namespaces optimization."
          },
          "greybel.transpiler.excludedNamespaces": {
            "type": "array",
            "default": [],
            "description": "Excluded namespaces regarding optimization.",
            "scope": "resource"
          },
          "greybel.transpiler.obfuscation": {
            "type": "boolean",
            "default": false,
            "description": "Allow special characters when uglifying."
          },
          "greybel.transpiler.ingameDirectoryPrompt": {
            "type": "boolean",
            "default": false,
            "description": "Prompts you to select a destination for the files on each import."
          },
          "greybel.transpiler.ingameDirectory": {
            "type": "string",
            "default": "/root/",
            "description": "Define ingame directory to where the files should be imported to."
          },
          "greybel.transpiler.installer.active": {
            "type": "boolean",
            "default": true,
            "description": "Generate installer when building.",
            "scope": "resource"
          },
          "greybel.transpiler.installer.maxChars": {
            "type": "number",
            "default": 155000,
            "minimum": 1000,
            "description": "Amount of characters allowed in one file before splitting when creating installer."
          },
          "greybel.transpiler.installer.allowImport": {
            "type": "boolean",
            "default": false,
            "description": "Enable allowImport when performing auto compile in installer."
          },
          "greybel.transpiler.beautify.keepParentheses": {
            "type": "boolean",
            "default": false,
            "description": "Always keep the parentheses."
          },
          "greybel.transpiler.beautify.indentation": {
            "type": "string",
            "enum": [
              "Tab",
              "Whitespace"
            ],
            "default": "Tab",
            "description": "Tab or whitespace. What should be used for indentation?"
          },
          "greybel.transpiler.beautify.indentationSpaces": {
            "type": "number",
            "default": 2,
            "description": "Define the amount of whitespaces when using whitespaces as indentation."
          }
        }
      },
      {
        "title": "Create Ingame",
        "properties": {
          "greybel.createIngame.port": {
            "type": "number",
            "default": 7777,
            "description": "Message-hook port for file upload.",
            "scope": "resource"
          },
          "greybel.createIngame.active": {
            "type": "boolean",
            "default": false,
            "description": "Create files automatically in-game.",
            "scope": "resource"
          },
          "greybel.createIngame.allowImport": {
            "type": "boolean",
            "default": false,
            "description": "Enable allowImport on auto compile."
          }
        }
      }
    ],
    "breakpoints": [
      {
        "language": "greyscript"
      }
    ],
    "debuggers": [
      {
        "type": "greyscript",
        "languages": [
          "greyscript"
        ],
        "label": "Greybel Debug",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${command:AskForProgramName}"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "greyscript",
            "request": "launch",
            "name": "Ask for file name",
            "program": "${command:AskForProgramName}"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Greybel Debug: Launch",
            "description": "A new configuration for 'debugging' a user selected greyscript file.",
            "body": {
              "type": "greyscript",
              "request": "launch",
              "name": "Ask for file name",
              "program": "^\"\\${command:AskForProgramName}\""
            }
          }
        ],
        "variables": {
          "AskForProgramName": "greybel.debug.getProgramName"
        }
      }
    ]
  },
  "dependencies": {
    "@vscode/debugadapter": "^1.68.0",
    "@vscode/debugprotocol": "^1.68.0",
    "another-ansi": "^1.0.2",
    "ansi-escapes": "^4.3.2",
    "color-convert": "^2.0.1",
    "crlf-normalize": "^1.0.20",
    "css-color-names": "^1.0.1",
    "greybel-gh-mock-intrinsics": "~5.6.1",
    "greybel-intrinsics": "~5.6.1",
    "greybel-languageserver": "~2.1.2",
    "greybel-languageserver-browser": "~2.1.2",
    "greyhack-message-hook-client": "../greyhack-message-hook-client",
    "greyscript-core": "~2.6.0",
    "greyscript-interpreter": "~2.6.1",
    "greyscript-meta": "~4.4.0",
    "greyscript-meta-web": "~1.4.0",
    "greyscript-textmate": "~2.0.3",
    "greyscript-transpiler": "~1.9.1",
    "lru-cache": "^11.1.0",
    "node-json-stream": "~0.2.6",
    "text-encoder-lite": "^2.0.0",
    "text-mesh-transformer": "^1.4.1",
    "unixify": "^1.0.0",
    "vscode-languageclient": "^9.0.1"
  },
  "browserslist": "> 0.25%, not dead"
}
